"""init db

Revision ID: cf111aa0039c
Revises: 
Create Date: 2025-10-26 13:19:55.957549

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from alembic_postgresql_enum import TableReference
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'cf111aa0039c'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('auth_sessions',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('expiration', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_auth_sessions'))
    )
    op.create_table('challenges',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('created_by', sa.UUID(), nullable=False),
    sa.Column('assigned_to', sa.UUID(), nullable=False),
    sa.Column('amount', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('fee', postgresql.ENUM('DONE_CHALLENGE_FEE', 'FAIL_CHALLENGE_FEE', name='challengefee', create_type=False), nullable=False),
    sa.Column('streamer_fixed_amount', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('status', postgresql.ENUM('PENDING', 'ACCEPTED', 'STREAMER_REJECTED', 'STREAMER_COMPLETED', 'VIEWER_CONFIRMED', 'VIEWER_REJECTED', 'REFUNDED', 'DONE', name='challengestatus', create_type=False), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('accepted_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_challenges'))
    )
    op.create_table('streamer_profiles',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('channel_name', sa.String(length=20), nullable=False),
    sa.Column('followers_count', sa.Integer(), nullable=False),
    sa.Column('url_stream', sa.String(length=1024), nullable=False),
    sa.Column('banner_url', sa.String(length=1024), nullable=True),
    sa.Column('min_amount_challenge', sa.NUMERIC(precision=12, scale=2), nullable=False),
    sa.Column('disable_challenges', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_streamer_profiles')),
    sa.UniqueConstraint('channel_name', name=op.f('uq_streamer_profiles_channel_name'))
    )
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('username', sa.String(length=20), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('password_hash', sa.LargeBinary(), nullable=False),
    sa.Column('user_type', postgresql.ENUM('VIEWER', 'STREAMER', 'SUPER_ADMIN', name='userrole', create_type=False), nullable=False),
    sa.Column('locked', sa.Boolean(), nullable=False),
    sa.Column('status', postgresql.ENUM('ACTIVE', 'PENDING', 'REJECTED', name='userstatus', create_type=False), nullable=False),
    sa.Column('credibility', sa.DOUBLE_PRECISION(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users')),
    sa.UniqueConstraint('email', name=op.f('uq_users_email')),
    sa.UniqueConstraint('username', name=op.f('uq_users_username'))
    )
    op.create_table('wallets',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('balance', sa.NUMERIC(precision=12, scale=2), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_wallets'))
    )
    op.sync_enum_values(
        enum_schema='public',
        enum_name='challengefee',
        new_values=['DONE_CHALLENGE_FEE', 'FAIL_CHALLENGE_FEE'],
        affected_columns=[TableReference(table_schema='public', table_name='challenges', column_name='fee')],
        enum_values_to_rename=[],
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.sync_enum_values(
        enum_schema='public',
        enum_name='challengefee',
        new_values=['CHALLENGE_FEE', 'DONATE_FEE'],
        affected_columns=[TableReference(table_schema='public', table_name='challenges', column_name='fee')],
        enum_values_to_rename=[],
    )
    op.drop_table('wallets')
    op.drop_table('users')
    op.drop_table('streamer_profiles')
    op.drop_table('challenges')
    op.drop_table('auth_sessions')
    # ### end Alembic commands ###
