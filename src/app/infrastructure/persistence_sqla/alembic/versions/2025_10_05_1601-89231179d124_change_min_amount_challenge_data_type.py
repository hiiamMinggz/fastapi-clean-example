"""change min_amount_challenge data type

Revision ID: 89231179d124
Revises: 6a413d040906
Create Date: 2025-10-05 16:01:04.305115

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '89231179d124'
down_revision: Union[str, None] = '6a413d040906'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('system_users')
    op.alter_column('challenges', 'amount',
               existing_type=sa.NUMERIC(precision=10, scale=2),
               type_=sa.Numeric(precision=12, scale=2),
               existing_nullable=False)
    op.alter_column('challenges', 'streamer_fixed_amount',
               existing_type=sa.NUMERIC(precision=10, scale=2),
               type_=sa.Numeric(precision=12, scale=2),
               existing_nullable=False)
    op.alter_column('streamer_profiles', 'min_amount_challenge',
               existing_type=sa.INTEGER(),
               type_=sa.NUMERIC(precision=12, scale=2),
               existing_nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('streamer_profiles', 'min_amount_challenge',
               existing_type=sa.NUMERIC(precision=12, scale=2),
               type_=sa.INTEGER(),
               existing_nullable=False)
    op.alter_column('challenges', 'streamer_fixed_amount',
               existing_type=sa.Numeric(precision=12, scale=2),
               type_=sa.NUMERIC(precision=10, scale=2),
               existing_nullable=False)
    op.alter_column('challenges', 'amount',
               existing_type=sa.Numeric(precision=12, scale=2),
               type_=sa.NUMERIC(precision=10, scale=2),
               existing_nullable=False)
    op.create_table('system_users',
    sa.Column('user_id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), autoincrement=False, nullable=False),
    sa.Column('user_name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('password', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('role', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('user_id', name=op.f('system_users_pkey')),
    sa.UniqueConstraint('user_name', name=op.f('system_users_user_name_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    # ### end Alembic commands ###
